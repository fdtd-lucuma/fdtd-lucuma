name: C/C++ CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  debian:
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/debian-ci:latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/cache/restore@v4
      with:
        path: build
        key: debian-ci-build

    - name: configure
      run: cmake -B build -G Ninja
        -DCMAKE_CXX_FLAGS="-O2 -pipe -fno-plt -Wall -Wextra"
        -DCMAKE_C_FLAGS="-O2 -pipe -fno-plt -Wall -Wextra"
        -DCMAKE_BUILD_TYPE=None
        -DCMAKE_INSTALL_PREFIX=/usr
        -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON
        -DCMAKE_UNITY_BUILD=ON
        -DCMAKE_TOOLCHAIN_FILE=/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: build
      run: |
          export MAKEFLAGS=-j$(nproc)
          cmake --build build

    - uses: actions/cache/save@v4
      with:
        path: build
        key: debian-ci-build

    - name: deb
      run: |
          find build -maxdepth 1 -executable -type f -exec strip --strip-all {} \+
          cmake --build build --target package

    - uses: actions/upload-artifact@v4
      with:
        name: debian_package
        path: build/*.deb

  arch-linux:
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/arch-linux-ci:latest

    steps:
    - uses: ammaraskar/gcc-problem-matcher@master

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/cache/restore@v4
      with:
        path: build
        key: arch-linux-ci-build

    - name: configure
      run: cmake
        -DUSE_SYSTEM_LIBS=ON
        -B build
        -G Ninja

    - name: build
      run: cmake --build build --parallel $(nproc)

    - uses: actions/cache/save@v4
      with:
        path: build
        key: arch-linux-ci-build
