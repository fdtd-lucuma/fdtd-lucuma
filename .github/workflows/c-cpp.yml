name: C/C++ CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: ammaraskar/gcc-problem-matcher@master

    - name: deps
      run: xargs -a pkg/ubuntu/dependencies.txt -- sudo apt-get install

    - name: configure
      run: cmake -B build
        -DCMAKE_CXX_FLAGS="-O2 -pipe -fno-plt -Wall -Wextra"
        -DCMAKE_C_FLAGS="-O2 -pipe -fno-plt -Wall -Wextra"
        -DCMAKE_BUILD_TYPE=None
        -DCMAKE_INSTALL_PREFIX=/usr
        -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON
        -DCMAKE_UNITY_BUILD=ON

    - name: build
      run: |
          export MAKEFLAGS=-j$(nproc)
          cmake --build build

    - name: deb
      run: |
          find build -maxdepth 1 -executable -type f -exec strip --strip-all {} \+
          cmake --build build --target package

    - uses: actions/upload-artifact@v4
      with:
        name: ubuntu_package
        path: build/*.deb

  arch-linux:
    runs-on: ubuntu-latest
    container: greyltc/archlinux-aur:paru

    steps:
    - uses: ammaraskar/gcc-problem-matcher@master
    - run: pacman -Syu --noconfirm git

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - run: chown --recursive ab .

    - name: build
      working-directory: ./pkg/arch
      run: |
        echo 'MAKEFLAGS="-j$(nproc)"' >> /etc/makepkg.conf
        sudo -u ab paru \
          --noconfirm \
          --batchinstall \
          --skipreview \
          --nocleanafter \
          --verbose \
          -B .

    - uses: actions/upload-artifact@v4
      with:
        name: arch_package
        path: pkg/arch/*.pkg.tar.*
